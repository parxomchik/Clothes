<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- This is where we configure Spring-Security  -->
	<security:http auto-config="true" use-expressions="true" >

        <!--<security:intercept-url pattern="/app/changePassword.xhtml**" access="hasRole('CUSTOMER')" />-->
		<security:intercept-url pattern="/app/admin/administrator/**" access="hasRole('ADMINISTRATOR')" />
        <security:intercept-url pattern="/app/admin/manager/**" access="hasRole('MANAGER')"/>
        <security:intercept-url pattern="/app/admin/delivery/**" access="hasRole('DELIVERY')"/>
        <security:intercept-url pattern="/app/admin/superuser/**" access="hasRole('SUPERUSER')"/>
        <!--For redirect to admin-->
        <security:intercept-url pattern="/app/admin" access="hasRole('ADMINISTRATOR, MANAGER, DELIVERY, SUPERUSER')"/>
        <security:intercept-url pattern="/app/admin/" access="hasRole('ADMINISTRATOR, MANAGER, DELIVERY, SUPERUSER')"/>
        <security:intercept-url pattern="/admin/" access="hasRole('ADMINISTRATOR, MANAGER, DELIVERY, SUPERUSER')"/>
        <security:intercept-url pattern="/admin" access="hasRole('ADMINISTRATOR, MANAGER, DELIVERY, SUPERUSER')"/>
        <!--<security:intercept-url pattern="/app/admin/login.xhtml" access="@ALL"/>-->

		<security:form-login
				login-page="/app/admin/login.xhtml"
				authentication-failure-url="/app/admin/login.xhtml" authentication-success-handler-ref="customAuthenticationSuccessHandler"/>
			
		<security:logout 
				invalidate-session="true" 
				logout-success-url="/app/admin/login.xhtml"
				logout-url="/app/admin/logout"/>
	
	</security:http>
	
	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<security:authentication-manager>
	        <security:authentication-provider user-service-ref="customUserDetailsService">
	        		<security:password-encoder ref="passwordEncoder"/>
	        </security:authentication-provider>
	</security:authentication-manager>

	<bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" id="passwordEncoder">
        <constructor-arg value="256"/>
	</bean>

	<!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
	<bean id="customUserDetailsService" class="com.vasax.clothes.util.CustomUserDetailsService"/>
	
</beans>
